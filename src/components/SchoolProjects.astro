---
import "../styles/global.css";
import "../styles/projects.css";
---

<section class="bg-stone-950 text-white my-5 md:my-10 relative">
    <h2 class="py-10 text-center">SCHOOL PROJECTS</h2>
    <div
        id="scroll-container"
        class="overflow-x-auto flex flex-row snap-x snap-mandatory scroll-smooth gap-40 px-[2vw] pb-5 md:pb-10 md:px-[10vw] no-scrollbar items-start"
    >
        <div class="project-card space-y-4">
            <h3 class="font-bold">Introduction to Software Engineering</h3>
            <h4 class="font-bold text-gray-400">Final Project</h4>
            <p>
                A modular command-line application focused on numerology and
                birthday analysis. Here is why I am proud of it:
            </p>
            <ul class="list-disc list-inside pl-4 space-y-2">
                <li>
                    The modules and submodules are designed with clear
                    responsibilities.
                </li>
                <li>
                    I applied test-driven development, by defining black-box and
                    white-box test cases.
                </li>
                <li>
                    I managed the project using a version control, taking
                    advantage of branching, merging, and perform commits
                    frequently to track progress.
                </li>
                <li>
                    The documentation is the most comprehensive I have ever
                    done.
                </li>
            </ul>
            <p>
                For more details, visit <a
                    class="text-blue-400 font-semibold"
                    href="https://github.com/cyandizy/ISENFinal"
                    target="_blank"
                    rel="noopener noreferrer"
                    >https://github.com/cyandizy/ISENFinal</a
                >
            </p>
        </div>
        <div class="project-card space-y-4">
            <h3 class="font-bold">Data Structure and Algorithms</h3>
            <h4 class="font-bold text-gray-400">Final Project</h4>
            <p>
                A command-line Bank Account Management System focused on self-
                implemented data structures and their applications.
            </p>
            <ul class="list-disc list-inside pl-4 space-y-2">
                <li>
                    I implemented a Binary Search Tree (BST) to store and manage
                    multiple bank accounts.
                </li>
                <li>
                    I have a Queue implemented via a Linked List, which is used
                    during BST traversal to save the order of nodes visited.
                </li>
                <li>
                    The command-line interface (CLI) can take user commands
                    which each of them has aliases, and command history,
                    improving user experience.
                </li>
                <li>I had unit tests fully implemented.</li>
                <li>The code is modular and scalable.</li>
            </ul>
            <p>
                For more details, visit <a
                    class="text-blue-400 font-semibold"
                    href="https://github.com/cyandizy/DSAFinal"
                    target="_blank"
                    rel="noopener noreferrer"
                    >https://github.com/cyandizy/DSAFinal</a
                >
            </p>
        </div>
    </div>
    <button
        id="scroll-prev"
        class="absolute md:left-10 md:top-30 text-white font-bold text-4xl md:h-120 md:w-10 hidden md:block"
        >&lt;</button
    >
    <button
        id="scroll-next"
        class="absolute md:right-10 md:top-30 text-white font-bold text-4xl md:h-120 md:w-10 hidden md:block"
        >&gt;</button
    >
    <p class="text-center md:hidden">&lt;-- Scroll --&gt;</p>
</section>

<script>
    // Get scrollable area
    const container = document.getElementById("scroll-container");
    // Get buttons
    const next = document.getElementById("scroll-next");
    const prev = document.getElementById("scroll-prev");

    // If container and buttons exist and are HTML elements
    if (
        container instanceof HTMLElement &&
        next instanceof HTMLElement &&
        prev instanceof HTMLElement
    ) {
        // Get a sample of project card
        const card = container.querySelector(".project-card");
        // If project card exists and is an HTML element
        if (card instanceof HTMLElement) {
            // Get CSS styles applied to project card
            const cardStyle = getComputedStyle(card);
            // Get card width
            const cardWidth =
                card.offsetWidth + parseInt(cardStyle.marginRight || "0");

            function scrollNext() {
                container?.scrollBy({ left: cardWidth, behavior: "smooth" });
            }

            function scrollPrev() {
                container?.scrollBy({ left: -cardWidth, behavior: "smooth" });
            }

            next.addEventListener("click", scrollNext);
            prev.addEventListener("click", scrollPrev);
        }
    }
</script>
